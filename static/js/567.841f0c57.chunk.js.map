{"version":3,"file":"static/js/567.841f0c57.chunk.js","mappings":"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","sources":["webpack://samuray-way/./src/Components/Content/Posts/Post/Post.module.css?2c13","Components/Content/Posts/Post/Post.tsx","Components/Content/Posts/Post/InputPost.tsx","Components/Content/Posts/Posts.tsx","Components/FormForUsers/UnActiveForm.tsx","Components/FormForUsers/InActiveForm.tsx","Components/Content/Profile/UserProfile.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","Components/Content/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"Post_ava__zBv+r\"};","import { FC } from 'react';\nimport classes from './Post.module.css';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from 'src/Components/Store';\n\nexport type Props = {\n  message: string;\n};\n\nexport const Post: FC<Props> = (props) => {\n  const postsFotoUser = useSelector(\n    (state: StoreState) => state.post.userProfile\n  );\n  const src =\n    postsFotoUser?.photos.small ||\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQh91Bam1jGaTQwFi1dBsvsMAsvHxA8gfJlwg&usqp=CAU';\n\n  return (\n    <div className={classes.ava}>\n      <img src={src} />\n      {props.message}\n    </div>\n  );\n};\n","import { useState, FC } from 'react';\n\ntype Props = {\n  onAdd: (message: string) => void;\n};\nexport const InputPost: FC<Props> = ({ onAdd }) => {\n  const [message, setMessage] = useState('');\n  const onText = () => {\n    if (message) {\n      onAdd(message);\n      setMessage('');\n    }\n    setMessage('');\n  };\n  return (\n    <div>\n      <input\n        value={message}\n        onChange={(e) => {\n          setMessage(e.target.value);\n        }}\n      />\n      {message ? (\n        <button type='submit' onClick={onText} style={{ cursor: 'pointer' }}>\n          Add Post\n        </button>\n      ) : (\n        <button disabled>Write Post</button>\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Post } from './Post/Post';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { InputPost } from './Post/InputPost';\nimport { StoreState } from 'src/Components/Store';\nimport { addPost } from 'src/Components/Store/postReducer';\nimport { nanoid } from 'nanoid';\n\nexport const Posts: FC = () => {\n  const posts = useSelector((state: StoreState) => state.post.userPosts);\n\n  const dispatch = useDispatch();\n  const handleClick = (message: string) => {\n    dispatch(\n      addPost({\n        id: nanoid(),\n        message,\n      })\n    );\n  };\n  return (\n    <div>\n      <InputPost onAdd={handleClick} />\n      {posts.map((post) => (\n        <Post key={post.id} message={post.message} />\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from '../Store';\n\nexport const UnActiveForm: FC = () => {\n  const UserProfileData = useSelector(\n    (state: StoreState) => state.post.userProfile\n  );\n  return UserProfileData === null ? (\n    <></>\n  ) : (\n    <form>\n      <p>\n        <b>Name:</b> <span>{UserProfileData.fullName}</span>\n      </p>\n      <p>\n        <b>About me:</b> <span>{UserProfileData.aboutMe}</span>\n      </p>\n      <p>\n        <b>Looking for job:</b>\n        {UserProfileData.lookingForAJob ? <span>Yes</span> : <span>No</span>}\n      </p>\n\n      <p>\n        <b>Job Discription:</b>\n        <span>{UserProfileData.lookingForAJobDescription}</span>\n      </p>\n    </form>\n  );\n};\n","import { zodResolver } from '@hookform/resolvers/zod';\nimport { ZodType, z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { UserInfoSchema } from '../Store/types';\nimport { FC, useEffect } from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { putInfoUser } from '../Store/postReducer';\nimport { StoreState } from '../Store';\n\nconst userInfoSchema: ZodType<UserInfoSchema> = z.object({\n  fullName: z.string().min(2),\n  aboutMe: z.string(),\n  lookingForAJob: z.boolean(),\n  lookingForAJobDescription: z.string(),\n});\ntype Props = {\n  setIsEdit: (isEdit: boolean) => void;\n};\n\nexport const InActiveForm: FC<Props> = ({ setIsEdit }) => {\n  const UserProfileData = useSelector(\n    (state: StoreState) => state.post.userProfile\n  );\n\n  const dispatch =\n    useDispatch<ThunkDispatch<UserInfoSchema, void, AnyAction>>();\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n\n    reset,\n    setFocus,\n  } = useForm<UserInfoSchema>({\n    resolver: zodResolver(userInfoSchema),\n    mode: 'onBlur',\n    defaultValues: {\n      fullName: UserProfileData?.fullName,\n      aboutMe: UserProfileData?.aboutMe,\n      lookingForAJob: UserProfileData?.lookingForAJob,\n      lookingForAJobDescription: UserProfileData?.lookingForAJobDescription,\n    },\n  });\n  const onSubmit = (data: UserInfoSchema) => {\n    setIsEdit(false);\n\n    dispatch(putInfoUser(data));\n    reset();\n  };\n  useEffect(() => {\n    setFocus('fullName');\n  }, [setFocus]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <label style={{ color: '#072ba2' }}>\n        <b>Name:</b>\n        <input type='text' {...register('fullName')} autoComplete='on' />\n        <div>{errors.fullName && <p>{errors.fullName.message}</p>}</div>\n      </label>\n      <br />\n      <label style={{ color: '#072ba2', marginTop: '15px', display: 'flex' }}>\n        <b>About me:</b>\n        <textarea {...register('aboutMe')} />\n      </label>\n      <br />\n      <label style={{ color: '#072ba2' }}>\n        <b>Looking for job</b>\n        <input type='checkbox' {...register('lookingForAJob')} />\n      </label>\n      <br />\n      <label style={{ color: '#072ba2', marginTop: '15px', display: 'flex' }}>\n        <b>Job Discription:</b>\n        <textarea {...register('lookingForAJobDescription')} />\n      </label>\n      <button\n        disabled={!isValid}\n        type='submit'\n        style={{\n          cursor: 'pointer',\n          margin: '15px 8px',\n          width: '100px',\n          height: '35px',\n          backgroundColor: 'white',\n        }}\n      >\n        Save\n      </button>\n    </form>\n  );\n};\n","import { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from 'src/Components/Store';\nimport { ProfileProps } from 'src/Components/Store/types';\nimport ava from '../../../Assets/cOPpcB6.png';\nimport { postFoto } from 'src/Components/Store/postReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { UnActiveForm } from 'src/Components/FormForUsers/UnActiveForm';\nimport { InActiveForm } from 'src/Components/FormForUsers/InActiveForm';\n// import { CAPTCHA, HTTPS, getApiResource } from 'src/Components/Api/api';\n\nexport const UserProfile: FC<ProfileProps> = ({ ...props }) => {\n  const [isEdit, setIsEdit] = useState<boolean>(false);\n\n  const dispatch = useDispatch<ThunkDispatch<StoreState, void, AnyAction>>();\n  const UserProfileData = useSelector(\n    (state: StoreState) => state.post.userProfile\n  );\n  const handleAddFoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files != null) {\n      const addFoto = e.target.files[0];\n      dispatch(postFoto(addFoto));\n    }\n  };\n\n  if (UserProfileData && Object.keys(UserProfileData).length !== 0) {\n    if (UserProfileData.userId === props.loginId) {\n      return (\n        <>\n          <img\n            src={\n              UserProfileData.photos.small !== null\n                ? UserProfileData.photos.small\n                : ava\n            }\n            alt='Small Photo'\n            style={{ height: '150px', width: '150px' }}\n          />\n          <input type='file' onChange={handleAddFoto} />\n          {isEdit ? (\n            <InActiveForm setIsEdit={setIsEdit} />\n          ) : (\n            <>\n              <UnActiveForm />\n              <button\n                onClick={() => setIsEdit(true)}\n                style={{ marginBottom: '15px' }}\n              >\n                Edit\n              </button>\n            </>\n          )}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <img\n            src={\n              UserProfileData.photos.small !== null\n                ? UserProfileData.photos.small\n                : ava\n            }\n            alt='Small Photo'\n            style={{ height: '150px', width: '150px' }}\n          />\n          <UnActiveForm />\n        </>\n      );\n    }\n  }\n  return null;\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { FC, useEffect } from 'react';\nimport { Posts } from '../Posts/Posts';\nimport { HTTPS, PROFILE } from '../../Api/api';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AnyAction } from 'redux';\nimport { UserProfile } from './UserProfile';\nimport { useParams } from 'react-router-dom';\nimport { StoreState } from 'src/Components/Store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { getUserProf } from 'src/Components/Store/postReducer';\n\nexport const Profile: FC = () => {\n  const { id } = useParams();\n  const loginData = useSelector((state: StoreState) => state.auth.userAuth);\n\n  const dispatch = useDispatch<ThunkDispatch<StoreState, void, AnyAction>>();\n\n  const urlId = id || loginData.id;\n\n  useEffect(() => {\n    if (urlId) {\n      dispatch(getUserProf(`${HTTPS}${PROFILE}${urlId}`));\n    }\n  }, [dispatch, urlId]);\n\n  return (\n    <div>\n      <UserProfile loginId={loginData.id} />\n      <Posts />\n    </div>\n  );\n};\n"],"names":["Post","props","postsFotoUser","useSelector","state","post","userProfile","src","photos","small","_jsxs","className","classes","children","_jsx","message","InputPost","_ref","onAdd","_useState","useState","_useState2","_slicedToArray","setMessage","value","onChange","e","target","type","onClick","style","cursor","disabled","Posts","posts","userPosts","dispatch","useDispatch","addPost","id","nanoid","map","UnActiveForm","UserProfileData","_Fragment","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","userInfoSchema","z","min","InActiveForm","setIsEdit","_useForm","useForm","resolver","zodResolver","mode","defaultValues","register","_useForm$formState","formState","errors","isValid","handleSubmit","reset","setFocus","useEffect","onSubmit","data","putInfoUser","color","_objectSpread","autoComplete","marginTop","display","margin","width","height","backgroundColor","UserProfile","Object","assign","obj","TypeError","_objectDestructuringEmpty","isEdit","keys","length","userId","loginId","ava","alt","files","addFoto","postFoto","marginBottom","Profile","useParams","loginData","auth","userAuth","urlId","getUserProf","concat","HTTPS","PROFILE"],"sourceRoot":""}